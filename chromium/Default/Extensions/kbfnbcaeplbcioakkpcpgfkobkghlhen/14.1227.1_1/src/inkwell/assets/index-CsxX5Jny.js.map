{"version":3,"file":"index-CsxX5Jny.js","sources":["../../../util-ref-counted/dist/index.mjs"],"sourcesContent":["import { ReferenceError } from '@grammarly/util-error';\nimport { isDev } from '@grammarly/util-is-dev';\nimport { logger } from '@grammarly/util-logging';\n\n/**\n * Automatic reference counting (ARC) implementation using disposables.\n * @packageDocumentation\n */\n/**\n * Automatic reference counting (ARC) implementation using disposables.\n * @public\n * @example\n * ```ts\n * async function main() { // scope 1\n *   await using arc = new AutomaticRefCounted('hello')\n *   { // scope 2\n *     using ref = arc.get()\n *     console.log(ref.value) // hello\n *   } // ref is disposed\n * } // arc is disposed\n * ```\n */\nclass AutomaticRefCounted {\n    #disposed = false;\n    #count = 0;\n    #onDispose = null;\n    #value;\n    constructor(value) {\n        this.#value = value;\n    }\n    peek() {\n        if (this.#disposed && isDev)\n            throw new ReferenceError();\n        return this.#value;\n    }\n    take() {\n        if (this.#disposed && isDev)\n            throw new ReferenceError();\n        let isDisposed = false;\n        this.#count++;\n        const getValue = () => this.peek();\n        const dispose = () => {\n            if (isDisposed)\n                return;\n            isDisposed = true;\n            stop();\n            if (--this.#count === 0) {\n                this.#onDispose?.();\n            }\n        };\n        const ref = Object.seal({\n            get value() {\n                return getValue();\n            },\n            release: dispose,\n            [Symbol.dispose]: dispose,\n        });\n        const stop = monitorForMemoryLeak(ref);\n        return ref;\n    }\n    get inUse() {\n        return this.#count > 0;\n    }\n    async [Symbol.asyncDispose]() {\n        if (this.#disposed)\n            return;\n        if (this.#count === 0) {\n            this.#disposed = true;\n        }\n        else {\n            await new Promise(resolve => {\n                this.#onDispose = () => {\n                    this.#disposed = true;\n                    resolve();\n                };\n            });\n        }\n    }\n}\nlet isMemoryLeakMonitoringEnabled = isDev;\n/**\n * Enable memory leak monitoring.\n * @public\n */\nfunction setMemoryLeakMonitoring(enabled) {\n    isMemoryLeakMonitoringEnabled = enabled;\n    if (!isMemoryLeakMonitoringEnabled)\n        registry = null;\n}\n/**\n * Reset memory leak monitoring.\n * @public\n */\nfunction resetMemoryLeakMonitoring() {\n    setMemoryLeakMonitoring(isDev);\n}\nlet registry = null;\nfunction monitorForMemoryLeak(object) {\n    if (!isMemoryLeakMonitoringEnabled)\n        return () => { };\n    if (registry === null) {\n        const childLogger = logger.createLogger('AutomaticRefCounted');\n        registry = new FinalizationRegistry(heldValue => {\n            childLogger.warn(`Memory leak detected: ${heldValue}`);\n        });\n    }\n    const key = Object.create(null);\n    registry.register(object, getNthCallStack(3 /* getNthCallStack <- monitorForMemoryLeak <- AutomatedRefCounted.get */), key);\n    return () => registry?.unregister(key);\n}\nfunction getNthCallStack(n) {\n    const error = new Error();\n    if (error.stack === undefined)\n        return '';\n    return error.stack\n        .split('\\n')\n        .slice(n + 1, n + 2)\n        .join('\\n')\n        .trimStart();\n}\n\nexport { AutomaticRefCounted, resetMemoryLeakMonitoring, setMemoryLeakMonitoring };\n//# sourceMappingURL=index.mjs.map\n"],"names":["AutomaticRefCounted","value","__privateAdd","_disposed","_count","_onDispose","_value","__privateSet","__privateGet","isDev","ReferenceError","isDisposed","__privateWrapper","getValue","dispose","stop","_a","ref","monitorForMemoryLeak","resolve","isMemoryLeakMonitoringEnabled","registry","object","childLogger","logger","heldValue","key","getNthCallStack","n","error"],"mappings":"gdAsBA,MAAMA,CAAoB,CAKtB,YAAYC,EAAO,CAJnBC,EAAA,KAAAC,EAAY,IACZD,EAAA,KAAAE,EAAS,GACTF,EAAA,KAAAG,EAAa,MACbH,EAAA,KAAAI,GAEIC,EAAA,KAAKD,EAASL,EACjB,CACD,MAAO,CACH,GAAIO,EAAA,KAAKL,IAAaM,EAClB,MAAM,IAAIC,EACd,OAAOF,EAAA,KAAKF,EACf,CACD,MAAO,CACH,GAAIE,EAAA,KAAKL,IAAaM,EAClB,MAAM,IAAIC,EACd,IAAIC,EAAa,GACjBC,EAAA,KAAKR,GAAL,IACA,MAAMS,EAAW,IAAM,KAAK,OACtBC,EAAU,IAAM,OACdH,IAEJA,EAAa,GACbI,IACW,EAALH,EAAA,KAAKR,GAAL,IAAgB,KAClBY,EAAAR,EAAA,KAAKH,KAAL,MAAAW,EAAA,YAEhB,EACcC,EAAM,OAAO,KAAK,CACpB,IAAI,OAAQ,CACR,OAAOJ,EAAQ,CAClB,EACD,QAASC,EACT,CAAC,OAAO,OAAO,EAAGA,CAC9B,CAAS,EACKC,EAAOG,EAAqBD,CAAG,EACrC,OAAOA,CACV,CACD,IAAI,OAAQ,CACR,OAAOT,EAAA,KAAKJ,GAAS,CACxB,CACD,MAAO,OAAO,YAAY,GAAI,CACtBI,EAAA,KAAKL,KAELK,EAAA,KAAKJ,KAAW,EAChBG,EAAA,KAAKJ,EAAY,IAGjB,MAAM,IAAI,QAAQgB,GAAW,CACzBZ,EAAA,KAAKF,EAAa,IAAM,CACpBE,EAAA,KAAKJ,EAAY,IACjBgB,GACpB,EACA,CAAa,EAER,CACL,CAvDIhB,EAAA,YACAC,EAAA,YACAC,EAAA,YACAC,EAAA,YAqDJ,IAAIc,EAAgCX,EAiBhCY,EAAW,KACf,SAASH,EAAqBI,EAAQ,CAClC,GAAI,CAACF,EACD,MAAO,IAAM,CAAA,EACjB,GAAIC,IAAa,KAAM,CACnB,MAAME,EAAcC,EAAO,aAAa,qBAAqB,EAC7DH,EAAW,IAAI,qBAAqBI,GAAa,CAC7CF,EAAY,KAAK,yBAAyB,OAAAE,EAAW,CACjE,CAAS,CACJ,CACD,MAAMC,EAAM,OAAO,OAAO,IAAI,EAC9B,OAAAL,EAAS,SAASC,EAAQK,EAAgB,CAAC,EAA4ED,CAAG,EACnH,IAAML,GAAA,YAAAA,EAAU,WAAWK,EACtC,CACA,SAASC,EAAgBC,EAAG,CACxB,MAAMC,EAAQ,IAAI,MAClB,OAAIA,EAAM,QAAU,OACT,GACJA,EAAM,MACR,MAAM,IAAI,EACV,MAAMD,EAAI,EAAGA,EAAI,CAAC,EAClB,KAAK,IAAI,EACT,WACT"}