var x=Object.defineProperty;var v=s=>{throw TypeError(s)};var R=(s,e,i)=>e in s?x(s,e,{enumerable:!0,configurable:!0,writable:!0,value:i}):s[e]=i;var g=(s,e,i)=>R(s,typeof e!="symbol"?e+"":e,i),m=(s,e,i)=>e.has(s)||v("Cannot "+i);var t=(s,e,i)=>(m(s,e,"read from private field"),i?i.call(s):e.get(s)),r=(s,e,i)=>e.has(s)?v("Cannot add the same private member more than once"):e instanceof WeakSet?e.add(s):e.set(s,i),p=(s,e,i,h)=>(m(s,e,"write to private field"),h?h.call(s,i):e.set(s,i),i),a=(s,e,i)=>(m(s,e,"access private method"),i);import{E as c}from"./Emitter-B4Dl_G-CoLDBUlE.js";var u,o,n,d,l;class E{constructor(){r(this,d);r(this,u,new c);r(this,o,[]);r(this,n);g(this,"messages",t(this,u))}get textRevision(){return t(this,n)}enqueue(e,i){const{promise:h,resolve:f}=Promise.withResolvers();return t(this,o).push({message:e,textRevision:i,resolve:f,promise:h}),a(this,d,l).call(this),h}pushNewTextRevision(e){(t(this,n)===void 0||e>t(this,n))&&(p(this,n,e),a(this,d,l).call(this))}}u=new WeakMap,o=new WeakMap,n=new WeakMap,d=new WeakSet,l=function(){if(t(this,n)!==void 0)for(;t(this,o).length>0;){const{message:e,promise:i,textRevision:h,resolve:f}=t(this,o).at(0);if(h!==void 0&&h>t(this,n))break;t(this,o).shift(),f(),i.then(()=>t(this,u).emit(e))}};export{E as T};
//# sourceMappingURL=TextRevisionSynchronizedQueue-B1Rn9G-BX2te2S9.js.map
